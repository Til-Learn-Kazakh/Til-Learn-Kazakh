import React, { useEffect } from 'react'
import { StyleSheet, Text, Vibration, View } from 'react-native'
import { RectButton } from 'react-native-gesture-handler'
import { useSafeAreaInsets } from 'react-native-safe-area-context'

import { BottomSheetModal } from '@gorhom/bottom-sheet'
import { AVPlaybackSource, Audio } from 'expo-av'

import { usePreferences } from '../../../../settings/hooks/preferences.context'

interface FooterProps {
	isDisabled: boolean
	onPress: () => void
	isSuccess?: boolean | null
	correctAnswer?: any // –î–æ–±–∞–≤–ª–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
	onContinue?: () => void // –î–æ–±–∞–≤–ª–µ–Ω –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è "CONTINUE"
	hearts: number // Pass the current hearts
	bottomSheetRef: React.RefObject<BottomSheetModal>
}

const Footer = ({
	isDisabled,
	onPress,
	isSuccess,
	correctAnswer,
	onContinue,
	hearts,
	bottomSheetRef,
}: FooterProps) => {
	const insets = useSafeAreaInsets()
	const { preferences } = usePreferences() // üëà –≤–æ—Ç –∑–¥–µ—Å—å –ø–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏

	// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∏–ª–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç–≤–µ—Ç–∞
	let feedbackMessage = ''
	let feedbackColor = '#333' // –¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ —Ñ–∏–¥–±—ç–∫–∞
	let backgroundColor = 'transparent' // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–∫—Ä—ã—Ç–æ
	let buttonColor = '#0286FF' // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Å–∏–Ω–∏–π
	let soundFile: AVPlaybackSource | null = null

	if (isSuccess === true) {
		feedbackMessage = '‚úî Great job!'
		feedbackColor = '#61e002' // –ó–µ–ª–µ–Ω—ã–π –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
		backgroundColor = '#d4fcbc'
		buttonColor = '#61e002'
		soundFile = require('../../../../../../public/sound/correct.wav')
	} else if (isSuccess === false) {
		feedbackMessage = 'Correct solution:'
		feedbackColor = '#ff4b4b' // –ö—Ä–∞—Å–Ω—ã–π –¥–ª—è –æ—à–∏–±–∫–∏
		backgroundColor = '#ffdfe0'
		buttonColor = '#ff4b4b'
		soundFile = require('../../../../../../public/sound/wrong.mp3')
	}


	useEffect(() => {
		const playSound = async () => {
			if (isSuccess !== null && soundFile && preferences.soundEffects) {
				const { sound } = await Audio.Sound.createAsync(soundFile)
				await sound.playAsync()
			}
		}

		if (isSuccess === true && preferences.vibration) {
			Vibration.vibrate(200) // –õ–µ–≥–∫–∞—è –≤–∏–±—Ä–∞—Ü–∏—è –ø—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –æ—Ç–≤–µ—Ç–µ
		} else if (isSuccess === false && preferences.vibration) {
			Vibration.vibrate(500) // –î–ª–∏–Ω–Ω–∞—è –≤–∏–±—Ä–∞—Ü–∏—è –ø—Ä–∏ –æ—à–∏–±–∫–µ
		}

		playSound()
	}, [isSuccess, preferences])

	const handleCheckPress = () => {
		if (hearts === 0) {
			bottomSheetRef.current?.present()
		} else {
			onPress()
		}
	}

	const handleContinuePress = () => {
		if (hearts === 0) {
			bottomSheetRef.current?.present()
		} else {
			// Continue to next task
			onContinue?.()
		}
	}

	return (
		<View style={{ paddingBottom: insets.bottom, alignItems: 'center' }}>
			{/* –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –µ—â–µ –Ω–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É CHECK */}
			{isSuccess === null ? (
				<RectButton
					style={[styles.checkButton, { backgroundColor: isDisabled ? '#B0BEC5' : '#0286FF' }]}
					enabled={!isDisabled}
					onPress={isDisabled ? undefined : handleCheckPress}
				>
					<Text style={styles.buttonLabel}>CHECK</Text>
				</RectButton>
			) : (
				// –ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –±–ª–æ–∫ —Å —Ñ–∏–¥–±—ç–∫–æ–º
				<View style={[styles.footerContainer, { backgroundColor }]}>
					{/* –°–æ–æ–±—â–µ–Ω–∏–µ Great job! –∏–ª–∏ Correct solution: */}
					<Text style={[styles.feedbackText, { color: feedbackColor }]}>{feedbackMessage}</Text>

					{/* –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –±—ã–ª –Ω–µ–≤–µ—Ä–Ω—ã–º, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ */}
					{isSuccess === false && correctAnswer && (
						<Text style={styles.correctAnswer}>{correctAnswer}</Text>
					)}
					<RectButton
						style={[styles.button, { backgroundColor: buttonColor }]}
						onPress={handleContinuePress}
					>
						<Text style={styles.buttonLabel}>CONTINUE</Text>
					</RectButton>
				</View>
			)}
		</View>
	)
}

const styles = StyleSheet.create({
	footerContainer: {
		width: '100%',
		padding: 16,
		position: 'absolute',
		bottom: 0,
		left: 0,
		right: 0,
		alignItems: 'flex-start', // –í—ã—Ä–æ–≤–Ω—è–ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç –≤–ª–µ–≤–æ
	},
	feedbackText: {
		fontSize: 22,
		fontWeight: 'bold',
		marginBottom: 5,
		textAlign: 'left', // –¢–µ–∫—Å—Ç —Å–ª–µ–≤–∞
		alignSelf: 'flex-start', // –¢–µ–∫—Å—Ç –≤—ã—Ä–∞–≤–Ω–µ–Ω –≤–ª–µ–≤–æ
		marginLeft: 10,
	},
	correctAnswer: {
		fontSize: 17, // –°–¥–µ–ª–∞–ª —á—É—Ç—å –º–µ–Ω—å—à–µ
		fontWeight: 'bold',
		color: '#ff4b4b', // –ö—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç
		marginBottom: 15,
		textAlign: 'left',
		alignSelf: 'flex-start',
		marginLeft: 12,
	},
	button: {
		width: '100%',
		height: 50,
		borderRadius: 16,
		justifyContent: 'center',
		alignItems: 'center',
		marginTop: 10,
		marginBottom: 30,
	},
	buttonLabel: {
		color: 'white',
		fontWeight: 'bold',
		fontSize: 18,
		textAlign: 'center',
		fontFamily: 'Nunito-Bold',
	},
	checkButton: {
		width: '92%',
		height: 50,
		borderRadius: 16,
		justifyContent: 'center',
		alignItems: 'center',
		marginBottom: 19,
	},
})

export default Footer
